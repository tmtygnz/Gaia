//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Products = newProductsTable("public", "products", "")

type productsTable struct {
	postgres.Table

	// Columns
	ID          postgres.ColumnInteger
	ProductName postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ProductsTable struct {
	productsTable

	EXCLUDED productsTable
}

// AS creates new ProductsTable with assigned alias
func (a ProductsTable) AS(alias string) *ProductsTable {
	return newProductsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ProductsTable with assigned schema name
func (a ProductsTable) FromSchema(schemaName string) *ProductsTable {
	return newProductsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ProductsTable with assigned table prefix
func (a ProductsTable) WithPrefix(prefix string) *ProductsTable {
	return newProductsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ProductsTable with assigned table suffix
func (a ProductsTable) WithSuffix(suffix string) *ProductsTable {
	return newProductsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newProductsTable(schemaName, tableName, alias string) *ProductsTable {
	return &ProductsTable{
		productsTable: newProductsTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newProductsTableImpl("", "excluded", ""),
	}
}

func newProductsTableImpl(schemaName, tableName, alias string) productsTable {
	var (
		IDColumn          = postgres.IntegerColumn("id")
		ProductNameColumn = postgres.StringColumn("productName")
		allColumns        = postgres.ColumnList{IDColumn, ProductNameColumn}
		mutableColumns    = postgres.ColumnList{ProductNameColumn}
	)

	return productsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		ProductName: ProductNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
